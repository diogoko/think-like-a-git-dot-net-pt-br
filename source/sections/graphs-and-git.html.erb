---
title:  "Graphs and Git"
layout: section
---



<p>The reason I've gone on at some length about graph theory is that a Git repository is one giant graph.</p>

<div class="fr wp-caption pad-left">
  <img src="/assets/images2/graphs-and-git.png" class="no-shadow" />
  <br /><strong>Git commits (simplified view)</strong>
</div>

<p>Most of the time when you interact with Git, you're working with commits in one way or another.  At the surface level, a Git commit consists of two things:  (1) a pointer to the state of your code at some moment in time, and (2) zero or more pointers to "parent" commits.</p>

<p><em>(Hint: the word "pointer" means you're probably talking about a graph.)</em></p>

<p><strong>A Git commit is a node in a graph</strong>, and each one of those nodes can point to other nodes that came before them.</p>

<div class="wp-caption" style="text-align: left; padding: 5px;">
  
  By the way:  if you want to learn way more about this than any reasonable human should ever know, I highly recommend Scott Chacon's <a href="https://github.com/pluralsight/git-internals-pdf/releases">"Git Internals" PDF</a>.  Scott's knowledge of Git is... impressive.

</div>
