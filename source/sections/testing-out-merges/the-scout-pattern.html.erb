---
title:  "The Scout Pattern"
layout: section
---



<p>Eis um resumo nos passos desta receita:</p>

<ol class="full-size">
  <li>Tenha certeza de que você está no branch certo e tem uma cópia de trabalho limpa.</li>
  <li>Crie um novo branch (geralmente eu chamo de <em>test_merge</em>) e troque para ele.</li>
  <li>Faça o merge.</li>
  <li>Abra o seu visualizador e imagine como o seu histórico vai mudar quando você o atualizar.</li>
  <li>Atualize o seu visualizador e veja se sua previsão estava correta.</li>
  <li>Ficou satisfeito com o resultado?
    <ul>
      <li>Se SIM: Mova seu branch real para onde o branch <em>test_merge</em> está.</li>
      <li>Se NÃO: Exclua o branch <em>test_merge</em>.</li>
    </ul>
  </li>
</ol>

<p>Eu chamo isso do padrão do Olheiro: você não tem certeza de como é o terreno à frente, então manda um grupo de olheiros para ir na frente e verificar. Se ele informa que está tudo bem, você segue em frente e se junta a eles. Se não, bom, era só um grupo pequeno de olheiros e nós diremos às famílias que eles morreram com honra...</p>

<h3>A versão longa</h3>

<p>Você está no branch <em><strong>master</strong></em> e você quer que as mudanças do branch <em><strong>spiffy_new_feature</strong></em> sejam incorporadas ao <em><strong>master.</strong></em> Você não tem certeza se isso é uma boa ideia, então você quer testar o merge e ser capaz de desfazê-lo se as coisas não saírem como esperado.</p>

<ol>
  <li>
    <strong>Tenha certeza de que você está no branch certo e tem uma cópia de trabalho limpa.</strong>
    <ul>
      <li>
        Seja qual for o visualizador que você está usando, descubra como ele mostra qual o branch atual em que você está. Ou, na linha de comando, digite <code class="inline">git status</code> e você deve ver algo como isso: <code> # On branch master <br /> nothing to commit (working directory clean) </code>
      </li>
    </ul>
  </li>
  <li>
    <strong>Crie um novo branch e troque para ele.</strong>
    <ul>
      <li>
        Digite <code class="inline">git checkout -b test_merge</code>. Agora, se você digitar <code class="inline">git status</code> de novo, você deve ver uma mensagem dizendo que você está no branch <em><strong>test_merge</strong></em>.
      </li>
    </ul>
  </li>
  <li>
    <strong>Faça o merge.</strong>
    <ul>
      <li>
        Digite <code class="inline">git merge spiffy_new_feature</code>. Se você tiver sorte, não haverão conflitos de merge que você não consiga resolver.
      </li>
      <li><strong>Se você quiser cancelar o merge</strong> neste ponto, digite <code class="inline">git reset --hard</code>.</li>
    </ul>
  </li>
  <li>
    <strong>Abra o seu visualizador e imagine como o seu histórico vai mudar quando você o atualizar.</strong>
    <ul>
      <li>
        Por exemplo:
        <ol>
          <li>Depois do merge, você deve ver um novo commit.</li>
          <li>O novo commit deve ter uma mensagem como "Merge branch 'spiffy_new_feature' into master".</li>
          <li>O rótulo do seu branch <em><strong>test_merge</strong></em> deve ter sido movido para este novo commit, enquanto que os rótulos dos branches <em><strong>master</strong></em> e <em><strong>spiffy_new_feature</strong></em> devem estar no mesmo lugar.</li>
        </ol>
      </li>
    </ul>
  </li>
  <li>
    <strong>Atualize o seu visualizador e veja se sua previsão estava correta.</strong>
  </li>
  <li>
    <strong>Ficou satisfeito com o resultado?</strong>
    <ul>
      <li>
        <strong>Se SIM:</strong> Mova o branch <em>master</em> até onde o branch <em>test_merge</em> está com: <code>git checkout master <br />git merge test_merge</code>
      </li>
      <li>
        <strong>Se NÃO:</strong> Exclua o branch <em>test_merge</em> com: <code>git checkout master <br />git branch -D test_merge</code>
      </li>
    </ul>
  </li>
</ol>
