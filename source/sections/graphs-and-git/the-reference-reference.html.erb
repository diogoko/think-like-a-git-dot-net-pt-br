---
title:  "The Reference Reference"
layout: section
---



<p>As previously mentioned, there are a few different kinds of references, and they all point to commits in your repository.  The only difference between them is how and when they move.  (When I say that a reference moves, I mean that the ID of the commit that it points to is updated.)</p>

<p><strong>Local branch references</strong> are specific to a single repository:  your local one.  Commands that affect local branch references include
  <code class="inline">commit</code>,
  <code class="inline">merge</code>,
  <code class="inline">rebase</code>, and
  <code class="inline">reset</code>.

</p>

<p><strong>Remote branch references</strong> are also specific to a single repository, but one that's previously been defined as a remote.  Commands that affect remote branch references include
  <code class="inline">fetch</code> and
  <code class="inline">push</code>.

</p>

<p><em>(The <code class="inline">pull</code> command is a special case: it combines <code class="inline">fetch</code> and either a <code class="inline">merge</code> or a <code class="inline">rebase</code>, depending on how you've got Git configured.)</em></p>

<p><strong>Tag references</strong> are basically like branch references that never move.  <strong>Once you've created a tag, it will never change</strong> (unless you explicitly update it using the <code class="inline">--force</code> option).  This behavior makes them useful for marking specific versions of a software package, or marking exactly what got deployed to a production server on a particular date.  As of this writing, I only know of one command that affects tags.  As you might guess, it's
  <code class="inline">tag</code>.

</p>
