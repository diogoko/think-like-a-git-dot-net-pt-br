---
title:  "Cherry-Picking Explained"
layout: section
---



<p>A ajuda online do Git tem uma descrição perfeitamente precisa, mesmo que caracteristicamente sucinta, do que o comando faz:</p>

<blockquote>
  <p>Dados um ou mais commits existentes, aplica a mudança que cada um introduz, gravando um novo commit para cada um.</p>
</blockquote>

<p>Eu já tinha mencionado (lá na página sobre <%= section_link('Garbage Collection') %>) que o ID de um commit do Git é um hash do seu conteúdo e do seu histórico. Então, mesmo que você tenha dois commits que introduzem exatamente a mesma mudança, se eles apontam para commits pais diferentes, eles terão IDs diferentes.</p>

<p>O que o <code class="inline">git cherry-pick</code> faz, basicamente, é pegar um commit de algum outro lugar, e "reproduzí-lo" onde quer que você esteja agora. Como isso introduz a mesma mudança com um pai diferente, o Git constroi um novo commit com um ID diferente.</p>

<p>Vamos voltar ao exemplo da seção <%= section_link('Reachability') %>:</p>

<div class="wp-caption">
  <img src="/think-like-a-git-dot-net-pt-br/assets/images2/reachability-example.png" class="no-shadow" />
</div>

<p>Se você estivesse no vértice H deste grafo, e você digitasse <code class="inline">git cherry-pick E</code> <em>(sim, você na verdade digitaria parte ou todo o SHA do commit, mas para simplificar, vamos apenas usar os rótulos que já estão aqui)</em>, você acabaria com uma cópia do commit E—vamos chamá-lo de "E linha" ou <strong>E'</strong>—que apontava para <strong>H</strong> como seu pai, como:</p>

<div class="wp-caption">
  <img src="/think-like-a-git-dot-net-pt-br/assets/images2/cherry-pick-example-1.png" class="no-shadow" />
</div>

<p>Ou, se você digitasse algo como <code class="inline">git cherry-pick C D E</code>, você acabaria com isso quando estivesse terminado:</p>

<div class="wp-caption">
  <img src="/think-like-a-git-dot-net-pt-br/assets/images2/cherry-pick-example-2.png" class="no-shadow" />
</div>

<p>O importante a perceber aqui é que o Git copiou as mudanças feitas num lugar, e as reproduziu em algum outro lugar.</p>

<p>Eis uma rápida apresentação dos passos deste processo:</p><!-- Making up for my lack of Javascript skills with Ruby instead -->


<div class="wp-caption">
  <% (1..7).each do |i| -%>
    <div id="cherry-pick-slideshow-slide-<%= i %>" class="cherry-pick-slideshow-slide" style="text-align: left;">
      <img src="/think-like-a-git-dot-net-pt-br/assets/images2/cherry-pick-slideshow/cherry-pick-step-&lt;%= i %&gt;.png" class="no-shadow" />
      <div style="text-align: center;">
        Passo <%= i %> <br /> <button ><%= 'disabled' if i == 1 %> onclick="show_slide('cherry-pick-slideshow', 1);"&gt;←←</button> <button ><%= 'disabled' if i == 1 %> onclick="show_slide('cherry-pick-slideshow', <%= i.pred %>);"&gt;←</button> <button ><%= 'disabled' if i == 7 %> onclick="show_slide('cherry-pick-slideshow', <%= i.succ %>);"&gt;→</button> <button ><%= 'disabled' if i == 7 %> onclick="show_slide('cherry-pick-slideshow', 7);"&gt;→→</button>
      </div>
    </div>
  <% end -%>
</div>


<script type="text/javascript" charset="utf-8">
  function show_slide(slideshow, index) {
    $('.'+slideshow+'-slide').hide();
    $('#'+slideshow+'-slide-' + index).show();
  }
  $(document).ready(function() {
    show_slide('cherry-pick-slideshow', 1);
  })
</script>
