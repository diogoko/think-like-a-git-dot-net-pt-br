---
title:  "The Savepoint Pattern"
layout: section
---



<p>Eis um resumo nos passos desta receita:</p>

<ol class="full-size">
  <li>Tenha certeza de que você está no branch certo e tem uma cópia de trabalho limpa.</li>
  <li>Crie um novo branch para usar como savepoint, mas não troque para ele.</li>
  <li>Faça o merge.</li>
  <li>Abra o seu visualizador e imagine como o seu histórico vai mudar quando você o atualizar.</li>
  <li>Atualize o seu visualizador e veja se sua previsão estava correta.</li>
  <li>Ficou satisfeito com o resultado?
    <ul>
      <li>Se SIM: Exclua o savepoint.</li>
      <li>Se NÃO: Restaure o seu branch para o backup.</li>
    </ul>
  </li>
</ol>

<p>(A não ser que último vídeo game que você jogou tenha sido Super Mario Brothers, deve ser óbvio porque eu chame este padrão de Savepoint).</p>

<h3>A versão longa</h3>

<p>Você está no branch <em><strong>master</strong></em> e você quer que as mudanças do branch <em><strong>spiffy_new_feature</strong></em> sejam incorporadas ao <em><strong>master.</strong></em> Você tem quase certeza que você quer manter as mudanças, mas você quer ser capaz de desfazê-las se, por exemplo, este novo recurso tiver efeitos colaterais inesperados.</p>

<ol>
  <li>
    <strong>Tenha certeza de que você está no branch certo e tem uma cópia de trabalho limpa.</strong>
    </li><li>
      Seja qual for o visualizador que você está usando, descubra como ele mostra qual o branch atual em que você está. Ou, na linha de comando, digite <code class="inline">git status</code> e você deve ver algo como isso: <code> # On branch master <br /> nothing to commit (working directory clean) </code>
    </li>
  </li>
  <li>
    <strong>Crie um novo branch para usar como savepoint, mas não troque para ele.</strong>
    <ul>
      <li>
        Digite <code class="inline">git branch savepoint</code>. Agora, se você digitar <code class="inline">git status</code> de novo, você deve ver ainda a mensagem que você está no branch <em><strong>master</strong></em>.
      </li>
    </ul>
  </li>
  <li>
    <strong>Faça o merge.</strong>
    <ul>
      <li>
        Digite <code class="inline">git merge spiffy_new_feature</code>. Se você tiver sorte, não haverão conflitos de merge que você não consiga resolver.
      </li>
      <li><strong>Se você quiser desfazer o merge</strong> neste momento, simplesmente digite <code class="inline">git reset --hard</code>.</li>
    </ul>
  </li>
  <li>
    <strong>Abra o seu visualizador e imagine como o seu histórico vai mudar quando você o atualizar.</strong>
    <ul>
      <li>
        Por exemplo:
        <ol>
          <li>Depois do merge, você deve ver um novo commit.</li>
          <li>O novo commit deve ter uma mensagem como "Merge branch 'spiffy_new_feature' into master".</li>
          <li>Seu rótulo do branch <em><strong>master</strong></em> deve ter sido movido para esse novo commit, enquanto que o rótulo do branch <em><strong>spiffy_new_feature</strong></em> deve continuar no mesmo lugar.</li>
        </ol>
      </li>
    </ul>
  </li>
  <li>
    <strong>Atualize o seu visualizador e veja se sua previsão estava correta.</strong>
  </li>
  <li>
    Ficou satisfeito com o resultado?
    <ul>
      <li>
        <strong>Se SIM:</strong> Exclua o savepoint. <code>git branch -d savepoint</code>
      </li>
      <li>
        <strong>Se NÃO:</strong> Restaure o seu branch para o savepoint. <code>git reset --hard savepoint</code> Se você quiser deixar tudo limpo, você pode excluir o branch de savepoint com <code class="inline">git branch -d savepoint</code>.
      </li>
    </ul>
  </li>
</ol>
