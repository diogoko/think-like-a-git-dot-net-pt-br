---
title:  "Use Your Targeting Computer, Luke"
layout: section
---



<p>I use GitX in almost every coding session.  GitX behaves like a web browser in one very important way:  <strong>it won't immediately reflect changes to your repository</strong>â€”you have to hit <strong>Cmd+R</strong> to tell it to <strong>(R)</strong>efresh its view.  <em>(Since I first wrote this, later forks of GitX have added auto-refresh.  I always turn it off.)</em></p>

<div class="fr wp-caption pad-left">
  <a href="http://store.xkcd.com/products/try-science"><img src="/think-like-a-git-dot-net-pt-br/assets/images2/xkcd-try-science.png" class="no-shadow" /></a>
  <br /><strong>It's a great shirt. You know you want one.</strong>
</div>

<p>You can use this to your advantage.  Here's how:  <strong>when you've done something on the command line,</strong> switch back to your visualizer, but <strong>don't refresh right away.</strong>  Instead, try to predict how what you did will change its view.  <em>(You can even try drawing out the graph on an index card.)</em>  Then, refresh the visualizer and ask yourself:  <strong>did it change in the way you expected?</strong></p>

<p><strong>If the answer is YES:</strong>  Congratulations!  You just learned something!</p>

<p><strong>If the answer is NO:</strong>  Congratulations!  You're about to learn something!</p>

<p>Repeat this process several thousand times, and eventually you won't need to refer to the visualizer as often.  <em>(For those of you who like bad sci-fi movies, think of it as less "Use the force, Luke" and more <strong>"Usul no longer needs the weirding module."</strong>)</em></p>
