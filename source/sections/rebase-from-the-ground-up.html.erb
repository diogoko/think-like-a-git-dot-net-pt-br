---
title:  "Rebase From the Ground Up"
layout: section
---



<p>O comando <code class="inline">rebase</code> do Git foi uma daquelas coisas que eu levei uma eternidade para entender. Isso foi em parte porque eu tinha muita coisa a aprender sobre gerenciar branches em geral, mas também em parte porque parecia que as pessoas só se preocupavam em escrever sobre rebase quando era para dizer <%= section_link('example-4-lsd-and-chainsaws', 'how incredibly weird and dangerous it was') %>.</p>

<p>Isso é uma grande pena, porque <strong>o rebase é o comando mais útil que eu uso no Git</strong>. Mais importante, <strong>na verdade é bem fácil de entender depois que você pega o jeito da coisa.</strong></p>

<h3>Perigo, Will Robinson!</h3>

<p>Eu tentei desmistificar o rebase nesta seção, e eu planejo descrever uma estratégia para experimentar com o rebase, do mesmo jeito que eu fiz com o merge. Entretanto, eu percebi recentemente que eu esqueci de mencionar algo muito importante sobre o rebase: <strong>geralmente é considerado grosseria reescrever o histórico em público!</strong></p>

<p>Antes de começar a usar rebase num repositório compartilhado, tenha certeza de que <strong>todo mundo</strong> que trabalha no seu projeto está confortável usando o rebase. Você também pode considerar trocar a estratégia de pull de todo mundo para "rebase" em vez de "merge".</p>

<h3>Fim do Anúncio de Utilidade Pública.</h3>

<p>Dito isso, eu vou fazer uma breve divagação, porque eu acho muito mais fácil explicar o rebase no contexto de outro comando Git: <code class="inline">git cherry-pick</code>.</p>
